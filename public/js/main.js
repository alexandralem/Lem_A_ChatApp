//imports 
import ChatMsg from './components/ChatMessage.js';
import Desc from './components/Announcement.js';
const socket = io();

const queryString = window.location.search;

const urlParams = new URLSearchParams(queryString);

const username = urlParams.get('username');


socket.emit('joinChat', {username});

//utility functions for socket
function setUserID( {sID} ) {
    //debugger;
    //save our unique id generated by Socket on the server side - this is how we track individual connections to the chat service
    vm.socketID = sID;
}

function handleUserTyping(user) {
  console.log(user.currentlytypinguser.name + ' is typing...');
}

function showNewMessage( {message} ) {
    vm.messages.push(message);
}

const { createApp } = Vue;

  const vm = createApp({
    data() {
      return {
        socketID: '',
        message: '',
        messages: [],
        nickname: '',
        text: ''
      }
    },

    methods: {
        dispatchMessage() {
            socket.emit('chat_message', {
                content: this.message,
                name: username || 'anonymous',
                id: this.socketID
            });

            this.message = "";
        },

        catchTextFocus() {
          //emit a typing event and broadcast it to the server
          socket.emit('user_typing', {
            name: username || "anonymous"
          })
        }
    },


    components: {
        newmsg: ChatMsg,
        newdesc: Desc
    }
  }).mount('#app')

  socket.addEventListener('connected', setUserID);
  socket.addEventListener('new_message', showNewMessage);
  socket.addEventListener('typing', handleUserTyping);

  socket.on('message', message => {
    console.log(message);
  });

  socket.on('allUsers', ({users}) => {
    console.log(users);
  });